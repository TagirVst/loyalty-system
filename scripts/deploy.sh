#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy.sh [env]
# env: dev (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏–ª–∏ prod

set -e

ENV=${1:-dev}
echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∂–∏–º–µ: $ENV"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! command -v docker compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω—ã Telegram –±–æ—Ç–æ–≤!"
    else
        echo "‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é."
        exit 1
    fi
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤..."
mkdir -p logs/{api,client_bot,barista_bot,admin_panel,postgres}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans

# –°–æ–∑–¥–∞–µ–º backup –ë–î –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if docker volume ls | grep -q loyalty_postgres_data; then
    echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    ./scripts/backup.sh
fi

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ë–î
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check –ë–î
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
timeout=60
elapsed=0
while ! docker-compose exec -T db pg_isready -U ${POSTGRES_USER:-loyalty_user} -d ${POSTGRES_DB:-loyalty_db} > /dev/null 2>&1; do
    if [ $elapsed -ge $timeout ]; then
        echo "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ –ë–î"
        exit 1
    fi
    echo "–û–∂–∏–¥–∞–Ω–∏–µ –ë–î... ($elapsed/$timeout)"
    sleep 5
    elapsed=$((elapsed + 5))
done

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose exec -T api alembic upgrade head

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ dev —Ä–µ–∂–∏–º–µ
if [ "$ENV" = "dev" ]; then
    echo "üé≠ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    docker-compose exec -T api python tests/fixtures.py || echo "‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ health check
check_service() {
    local service=$1
    local url=$2
    
    for i in {1..5}; do
        if curl -f -s "$url" > /dev/null; then
            echo "‚úÖ $service —Ä–∞–±–æ—Ç–∞–µ—Ç"
            return 0
        fi
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ $service... (–ø–æ–ø—ã—Ç–∫–∞ $i/5)"
        sleep 10
    done
    echo "‚ùå $service –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
if check_service "API" "http://localhost:8000/analytics/summary"; then
    echo "üéâ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ: http://localhost:8000/docs"
else
    echo "‚ö†Ô∏è  API –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs api"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å  
if check_service "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" "http://localhost:8000/"; then
    echo "üéâ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞: http://localhost:8000/"
else
    echo "‚ö†Ô∏è  –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs admin_panel"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose logs -f"
echo "  –õ–æ–≥–∏ API: docker-compose logs -f api"
echo "  –õ–æ–≥–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞: docker-compose logs -f client_bot"
echo "  –õ–æ–≥–∏ –±–∞—Ä–∏—Å—Ç–∞ –±–æ—Ç–∞: docker-compose logs -f barista_bot"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "  Backup –ë–î: ./scripts/backup.sh"
echo "  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î: ./scripts/restore.sh <backup_file>"
echo ""
echo "üîó –°—Å—ã–ª–∫–∏:"
echo "  API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
echo "  –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:8000/"
echo "  Swagger API: http://localhost:8000/docs"
echo ""

if [ "$ENV" = "prod" ]; then
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:"
    echo "  1. –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ .env —Ñ–∞–π–ª–µ"
    echo "  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS –¥–æ–º–µ–Ω—ã –≤ api/main.py"
    echo "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL/HTTPS"
    echo "  4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ backup'—ã"
    echo "  5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
fi